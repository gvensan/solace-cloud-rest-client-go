/*
MISSION CONTROL

Documentation for Mission Control API

API version: V2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Cluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Cluster{}

// Cluster The DMR cluster details.
type Cluster struct {
	// The name of the DMR cluster.
	Name *string `json:"name,omitempty"`
	// The password for the cluster.
	Password *string `json:"password,omitempty"`
	// The address of the remote node in the cluster.
	RemoteAddress *string `json:"remoteAddress,omitempty"`
	// The name of the primary event broker.
	PrimaryRouterName *string `json:"primaryRouterName,omitempty"`
	// The name of the backup event broker.
	BackupRouterName *string `json:"backupRouterName,omitempty"`
	// The name of the monitoring node.
	MonitoringRouterName *string `json:"monitoringRouterName,omitempty"`
	// The authentication mode between the nodes in the DMR cluster.
	SupportedAuthenticationMode []string `json:"supportedAuthenticationMode,omitempty"`
}

// NewCluster instantiates a new Cluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCluster() *Cluster {
	this := Cluster{}
	return &this
}

// NewClusterWithDefaults instantiates a new Cluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterWithDefaults() *Cluster {
	this := Cluster{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Cluster) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Cluster) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Cluster) SetName(v string) {
	o.Name = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *Cluster) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *Cluster) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *Cluster) SetPassword(v string) {
	o.Password = &v
}

// GetRemoteAddress returns the RemoteAddress field value if set, zero value otherwise.
func (o *Cluster) GetRemoteAddress() string {
	if o == nil || IsNil(o.RemoteAddress) {
		var ret string
		return ret
	}
	return *o.RemoteAddress
}

// GetRemoteAddressOk returns a tuple with the RemoteAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetRemoteAddressOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteAddress) {
		return nil, false
	}
	return o.RemoteAddress, true
}

// HasRemoteAddress returns a boolean if a field has been set.
func (o *Cluster) HasRemoteAddress() bool {
	if o != nil && !IsNil(o.RemoteAddress) {
		return true
	}

	return false
}

// SetRemoteAddress gets a reference to the given string and assigns it to the RemoteAddress field.
func (o *Cluster) SetRemoteAddress(v string) {
	o.RemoteAddress = &v
}

// GetPrimaryRouterName returns the PrimaryRouterName field value if set, zero value otherwise.
func (o *Cluster) GetPrimaryRouterName() string {
	if o == nil || IsNil(o.PrimaryRouterName) {
		var ret string
		return ret
	}
	return *o.PrimaryRouterName
}

// GetPrimaryRouterNameOk returns a tuple with the PrimaryRouterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetPrimaryRouterNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryRouterName) {
		return nil, false
	}
	return o.PrimaryRouterName, true
}

// HasPrimaryRouterName returns a boolean if a field has been set.
func (o *Cluster) HasPrimaryRouterName() bool {
	if o != nil && !IsNil(o.PrimaryRouterName) {
		return true
	}

	return false
}

// SetPrimaryRouterName gets a reference to the given string and assigns it to the PrimaryRouterName field.
func (o *Cluster) SetPrimaryRouterName(v string) {
	o.PrimaryRouterName = &v
}

// GetBackupRouterName returns the BackupRouterName field value if set, zero value otherwise.
func (o *Cluster) GetBackupRouterName() string {
	if o == nil || IsNil(o.BackupRouterName) {
		var ret string
		return ret
	}
	return *o.BackupRouterName
}

// GetBackupRouterNameOk returns a tuple with the BackupRouterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetBackupRouterNameOk() (*string, bool) {
	if o == nil || IsNil(o.BackupRouterName) {
		return nil, false
	}
	return o.BackupRouterName, true
}

// HasBackupRouterName returns a boolean if a field has been set.
func (o *Cluster) HasBackupRouterName() bool {
	if o != nil && !IsNil(o.BackupRouterName) {
		return true
	}

	return false
}

// SetBackupRouterName gets a reference to the given string and assigns it to the BackupRouterName field.
func (o *Cluster) SetBackupRouterName(v string) {
	o.BackupRouterName = &v
}

// GetMonitoringRouterName returns the MonitoringRouterName field value if set, zero value otherwise.
func (o *Cluster) GetMonitoringRouterName() string {
	if o == nil || IsNil(o.MonitoringRouterName) {
		var ret string
		return ret
	}
	return *o.MonitoringRouterName
}

// GetMonitoringRouterNameOk returns a tuple with the MonitoringRouterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetMonitoringRouterNameOk() (*string, bool) {
	if o == nil || IsNil(o.MonitoringRouterName) {
		return nil, false
	}
	return o.MonitoringRouterName, true
}

// HasMonitoringRouterName returns a boolean if a field has been set.
func (o *Cluster) HasMonitoringRouterName() bool {
	if o != nil && !IsNil(o.MonitoringRouterName) {
		return true
	}

	return false
}

// SetMonitoringRouterName gets a reference to the given string and assigns it to the MonitoringRouterName field.
func (o *Cluster) SetMonitoringRouterName(v string) {
	o.MonitoringRouterName = &v
}

// GetSupportedAuthenticationMode returns the SupportedAuthenticationMode field value if set, zero value otherwise.
func (o *Cluster) GetSupportedAuthenticationMode() []string {
	if o == nil || IsNil(o.SupportedAuthenticationMode) {
		var ret []string
		return ret
	}
	return o.SupportedAuthenticationMode
}

// GetSupportedAuthenticationModeOk returns a tuple with the SupportedAuthenticationMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cluster) GetSupportedAuthenticationModeOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedAuthenticationMode) {
		return nil, false
	}
	return o.SupportedAuthenticationMode, true
}

// HasSupportedAuthenticationMode returns a boolean if a field has been set.
func (o *Cluster) HasSupportedAuthenticationMode() bool {
	if o != nil && !IsNil(o.SupportedAuthenticationMode) {
		return true
	}

	return false
}

// SetSupportedAuthenticationMode gets a reference to the given []string and assigns it to the SupportedAuthenticationMode field.
func (o *Cluster) SetSupportedAuthenticationMode(v []string) {
	o.SupportedAuthenticationMode = v
}

func (o Cluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Cluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.RemoteAddress) {
		toSerialize["remoteAddress"] = o.RemoteAddress
	}
	if !IsNil(o.PrimaryRouterName) {
		toSerialize["primaryRouterName"] = o.PrimaryRouterName
	}
	if !IsNil(o.BackupRouterName) {
		toSerialize["backupRouterName"] = o.BackupRouterName
	}
	if !IsNil(o.MonitoringRouterName) {
		toSerialize["monitoringRouterName"] = o.MonitoringRouterName
	}
	if !IsNil(o.SupportedAuthenticationMode) {
		toSerialize["supportedAuthenticationMode"] = o.SupportedAuthenticationMode
	}
	return toSerialize, nil
}

type NullableCluster struct {
	value *Cluster
	isSet bool
}

func (v NullableCluster) Get() *Cluster {
	return v.value
}

func (v *NullableCluster) Set(val *Cluster) {
	v.value = val
	v.isSet = true
}

func (v NullableCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCluster(val *Cluster) *NullableCluster {
	return &NullableCluster{value: val, isSet: true}
}

func (v NullableCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


