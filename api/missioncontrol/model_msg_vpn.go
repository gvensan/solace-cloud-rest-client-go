/*
MISSION CONTROL

Documentation for Mission Control API

API version: V2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MsgVpn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MsgVpn{}

// MsgVpn The list of Message VPNs configured on the event broker service.
type MsgVpn struct {
	// The name of the Message VPN.
	MsgVpnName *string `json:"msgVpnName,omitempty"`
	// Whether basic authentication is enabled.
	AuthenticationBasicEnabled *bool `json:"authenticationBasicEnabled,omitempty"`
	// The authentication type. This can be 'none', 'internal', or 'ldap'.
	AuthenticationBasicType *string `json:"authenticationBasicType,omitempty"`
	// Whether client certificate authentication is enabled.
	AuthenticationClientCertEnabled *bool `json:"authenticationClientCertEnabled,omitempty"`
	// Whether the validation of the 'Not Before' and 'Not After' dates in a client certificate is enabled.
	AuthenticationClientCertValidateDateEnabled *bool `json:"authenticationClientCertValidateDateEnabled,omitempty"`
	// Whether OAuth authentication is enabled for the Message VPN.
	AuthenticationOauthEnabled *bool `json:"authenticationOauthEnabled,omitempty"`
	// The client profiles configured on the Message VPN.
	ClientProfiles []ClientProfileBase `json:"clientProfiles,omitempty"`
	// Enabled
	Enabled *bool `json:"enabled,omitempty"`
	// The large message threshold generates events when the size of a message in a Message VPN exceeds a specified size.
	EventLargeMsgThreshold *int32 `json:"eventLargeMsgThreshold,omitempty"`
	ManagementAdminLoginCredential *ManagementLoginCredential `json:"managementAdminLoginCredential,omitempty"`
	ServiceLoginCredential *LoginCredential `json:"serviceLoginCredential,omitempty"`
	// The maximum number of clients that are permitted to simultaneously connect to the Message VPN. 
	MaxConnectionCount *int32 `json:"maxConnectionCount,omitempty"`
	// The maximum number of egress flows (that is, Guaranteed message client receive flows or consumer flows) that can be created by a single client.
	MaxEgressFlowCount *int32 `json:"maxEgressFlowCount,omitempty"`
	// The maximum number of flows that can bind to a non-exclusive durable topic endpoint.
	MaxEndpointCount *int32 `json:"maxEndpointCount,omitempty"`
	// The total permitted number of ingress flows (that is, Guaranteed Message client publish flows) for a Message VPN.
	MaxIngressFlowCount *int32 `json:"maxIngressFlowCount,omitempty"`
	// The maximum message spool usage.
	MaxMsgSpoolUsage *int32 `json:"maxMsgSpoolUsage,omitempty"`
	// The maximum number of unique subscriptions.
	MaxSubscriptionCount *int32 `json:"maxSubscriptionCount,omitempty"`
	// The maximum number of simultaneous transacted sessions and/or XA Sessions allowed for the given Message VPN.
	MaxTransactedSessionCount *int32 `json:"maxTransactedSessionCount,omitempty"`
	// The total number of simultaneous transactions (both local transactions and transactions within distributed/XA transaction branches) in a Message VPN.
	MaxTransactionCount *int32 `json:"maxTransactionCount,omitempty"`
	SempOverMessageBus *SEMPOverMsgBus `json:"sempOverMessageBus,omitempty"`
	// The generated hostname assigned for the Message VPN.  For example, 'mr54hcalmefac.messaging.solace.cloud'.
	SubDomainName *string `json:"subDomainName,omitempty"`
	// The URI for the SSL trust store.
	TruststoreUri *string `json:"truststoreUri,omitempty"`
}

// NewMsgVpn instantiates a new MsgVpn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMsgVpn() *MsgVpn {
	this := MsgVpn{}
	return &this
}

// NewMsgVpnWithDefaults instantiates a new MsgVpn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMsgVpnWithDefaults() *MsgVpn {
	this := MsgVpn{}
	return &this
}

// GetMsgVpnName returns the MsgVpnName field value if set, zero value otherwise.
func (o *MsgVpn) GetMsgVpnName() string {
	if o == nil || IsNil(o.MsgVpnName) {
		var ret string
		return ret
	}
	return *o.MsgVpnName
}

// GetMsgVpnNameOk returns a tuple with the MsgVpnName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetMsgVpnNameOk() (*string, bool) {
	if o == nil || IsNil(o.MsgVpnName) {
		return nil, false
	}
	return o.MsgVpnName, true
}

// HasMsgVpnName returns a boolean if a field has been set.
func (o *MsgVpn) HasMsgVpnName() bool {
	if o != nil && !IsNil(o.MsgVpnName) {
		return true
	}

	return false
}

// SetMsgVpnName gets a reference to the given string and assigns it to the MsgVpnName field.
func (o *MsgVpn) SetMsgVpnName(v string) {
	o.MsgVpnName = &v
}

// GetAuthenticationBasicEnabled returns the AuthenticationBasicEnabled field value if set, zero value otherwise.
func (o *MsgVpn) GetAuthenticationBasicEnabled() bool {
	if o == nil || IsNil(o.AuthenticationBasicEnabled) {
		var ret bool
		return ret
	}
	return *o.AuthenticationBasicEnabled
}

// GetAuthenticationBasicEnabledOk returns a tuple with the AuthenticationBasicEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetAuthenticationBasicEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AuthenticationBasicEnabled) {
		return nil, false
	}
	return o.AuthenticationBasicEnabled, true
}

// HasAuthenticationBasicEnabled returns a boolean if a field has been set.
func (o *MsgVpn) HasAuthenticationBasicEnabled() bool {
	if o != nil && !IsNil(o.AuthenticationBasicEnabled) {
		return true
	}

	return false
}

// SetAuthenticationBasicEnabled gets a reference to the given bool and assigns it to the AuthenticationBasicEnabled field.
func (o *MsgVpn) SetAuthenticationBasicEnabled(v bool) {
	o.AuthenticationBasicEnabled = &v
}

// GetAuthenticationBasicType returns the AuthenticationBasicType field value if set, zero value otherwise.
func (o *MsgVpn) GetAuthenticationBasicType() string {
	if o == nil || IsNil(o.AuthenticationBasicType) {
		var ret string
		return ret
	}
	return *o.AuthenticationBasicType
}

// GetAuthenticationBasicTypeOk returns a tuple with the AuthenticationBasicType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetAuthenticationBasicTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationBasicType) {
		return nil, false
	}
	return o.AuthenticationBasicType, true
}

// HasAuthenticationBasicType returns a boolean if a field has been set.
func (o *MsgVpn) HasAuthenticationBasicType() bool {
	if o != nil && !IsNil(o.AuthenticationBasicType) {
		return true
	}

	return false
}

// SetAuthenticationBasicType gets a reference to the given string and assigns it to the AuthenticationBasicType field.
func (o *MsgVpn) SetAuthenticationBasicType(v string) {
	o.AuthenticationBasicType = &v
}

// GetAuthenticationClientCertEnabled returns the AuthenticationClientCertEnabled field value if set, zero value otherwise.
func (o *MsgVpn) GetAuthenticationClientCertEnabled() bool {
	if o == nil || IsNil(o.AuthenticationClientCertEnabled) {
		var ret bool
		return ret
	}
	return *o.AuthenticationClientCertEnabled
}

// GetAuthenticationClientCertEnabledOk returns a tuple with the AuthenticationClientCertEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetAuthenticationClientCertEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AuthenticationClientCertEnabled) {
		return nil, false
	}
	return o.AuthenticationClientCertEnabled, true
}

// HasAuthenticationClientCertEnabled returns a boolean if a field has been set.
func (o *MsgVpn) HasAuthenticationClientCertEnabled() bool {
	if o != nil && !IsNil(o.AuthenticationClientCertEnabled) {
		return true
	}

	return false
}

// SetAuthenticationClientCertEnabled gets a reference to the given bool and assigns it to the AuthenticationClientCertEnabled field.
func (o *MsgVpn) SetAuthenticationClientCertEnabled(v bool) {
	o.AuthenticationClientCertEnabled = &v
}

// GetAuthenticationClientCertValidateDateEnabled returns the AuthenticationClientCertValidateDateEnabled field value if set, zero value otherwise.
func (o *MsgVpn) GetAuthenticationClientCertValidateDateEnabled() bool {
	if o == nil || IsNil(o.AuthenticationClientCertValidateDateEnabled) {
		var ret bool
		return ret
	}
	return *o.AuthenticationClientCertValidateDateEnabled
}

// GetAuthenticationClientCertValidateDateEnabledOk returns a tuple with the AuthenticationClientCertValidateDateEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetAuthenticationClientCertValidateDateEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AuthenticationClientCertValidateDateEnabled) {
		return nil, false
	}
	return o.AuthenticationClientCertValidateDateEnabled, true
}

// HasAuthenticationClientCertValidateDateEnabled returns a boolean if a field has been set.
func (o *MsgVpn) HasAuthenticationClientCertValidateDateEnabled() bool {
	if o != nil && !IsNil(o.AuthenticationClientCertValidateDateEnabled) {
		return true
	}

	return false
}

// SetAuthenticationClientCertValidateDateEnabled gets a reference to the given bool and assigns it to the AuthenticationClientCertValidateDateEnabled field.
func (o *MsgVpn) SetAuthenticationClientCertValidateDateEnabled(v bool) {
	o.AuthenticationClientCertValidateDateEnabled = &v
}

// GetAuthenticationOauthEnabled returns the AuthenticationOauthEnabled field value if set, zero value otherwise.
func (o *MsgVpn) GetAuthenticationOauthEnabled() bool {
	if o == nil || IsNil(o.AuthenticationOauthEnabled) {
		var ret bool
		return ret
	}
	return *o.AuthenticationOauthEnabled
}

// GetAuthenticationOauthEnabledOk returns a tuple with the AuthenticationOauthEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetAuthenticationOauthEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AuthenticationOauthEnabled) {
		return nil, false
	}
	return o.AuthenticationOauthEnabled, true
}

// HasAuthenticationOauthEnabled returns a boolean if a field has been set.
func (o *MsgVpn) HasAuthenticationOauthEnabled() bool {
	if o != nil && !IsNil(o.AuthenticationOauthEnabled) {
		return true
	}

	return false
}

// SetAuthenticationOauthEnabled gets a reference to the given bool and assigns it to the AuthenticationOauthEnabled field.
func (o *MsgVpn) SetAuthenticationOauthEnabled(v bool) {
	o.AuthenticationOauthEnabled = &v
}

// GetClientProfiles returns the ClientProfiles field value if set, zero value otherwise.
func (o *MsgVpn) GetClientProfiles() []ClientProfileBase {
	if o == nil || IsNil(o.ClientProfiles) {
		var ret []ClientProfileBase
		return ret
	}
	return o.ClientProfiles
}

// GetClientProfilesOk returns a tuple with the ClientProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetClientProfilesOk() ([]ClientProfileBase, bool) {
	if o == nil || IsNil(o.ClientProfiles) {
		return nil, false
	}
	return o.ClientProfiles, true
}

// HasClientProfiles returns a boolean if a field has been set.
func (o *MsgVpn) HasClientProfiles() bool {
	if o != nil && !IsNil(o.ClientProfiles) {
		return true
	}

	return false
}

// SetClientProfiles gets a reference to the given []ClientProfileBase and assigns it to the ClientProfiles field.
func (o *MsgVpn) SetClientProfiles(v []ClientProfileBase) {
	o.ClientProfiles = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *MsgVpn) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MsgVpn) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MsgVpn) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetEventLargeMsgThreshold returns the EventLargeMsgThreshold field value if set, zero value otherwise.
func (o *MsgVpn) GetEventLargeMsgThreshold() int32 {
	if o == nil || IsNil(o.EventLargeMsgThreshold) {
		var ret int32
		return ret
	}
	return *o.EventLargeMsgThreshold
}

// GetEventLargeMsgThresholdOk returns a tuple with the EventLargeMsgThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetEventLargeMsgThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.EventLargeMsgThreshold) {
		return nil, false
	}
	return o.EventLargeMsgThreshold, true
}

// HasEventLargeMsgThreshold returns a boolean if a field has been set.
func (o *MsgVpn) HasEventLargeMsgThreshold() bool {
	if o != nil && !IsNil(o.EventLargeMsgThreshold) {
		return true
	}

	return false
}

// SetEventLargeMsgThreshold gets a reference to the given int32 and assigns it to the EventLargeMsgThreshold field.
func (o *MsgVpn) SetEventLargeMsgThreshold(v int32) {
	o.EventLargeMsgThreshold = &v
}

// GetManagementAdminLoginCredential returns the ManagementAdminLoginCredential field value if set, zero value otherwise.
func (o *MsgVpn) GetManagementAdminLoginCredential() ManagementLoginCredential {
	if o == nil || IsNil(o.ManagementAdminLoginCredential) {
		var ret ManagementLoginCredential
		return ret
	}
	return *o.ManagementAdminLoginCredential
}

// GetManagementAdminLoginCredentialOk returns a tuple with the ManagementAdminLoginCredential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetManagementAdminLoginCredentialOk() (*ManagementLoginCredential, bool) {
	if o == nil || IsNil(o.ManagementAdminLoginCredential) {
		return nil, false
	}
	return o.ManagementAdminLoginCredential, true
}

// HasManagementAdminLoginCredential returns a boolean if a field has been set.
func (o *MsgVpn) HasManagementAdminLoginCredential() bool {
	if o != nil && !IsNil(o.ManagementAdminLoginCredential) {
		return true
	}

	return false
}

// SetManagementAdminLoginCredential gets a reference to the given ManagementLoginCredential and assigns it to the ManagementAdminLoginCredential field.
func (o *MsgVpn) SetManagementAdminLoginCredential(v ManagementLoginCredential) {
	o.ManagementAdminLoginCredential = &v
}

// GetServiceLoginCredential returns the ServiceLoginCredential field value if set, zero value otherwise.
func (o *MsgVpn) GetServiceLoginCredential() LoginCredential {
	if o == nil || IsNil(o.ServiceLoginCredential) {
		var ret LoginCredential
		return ret
	}
	return *o.ServiceLoginCredential
}

// GetServiceLoginCredentialOk returns a tuple with the ServiceLoginCredential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetServiceLoginCredentialOk() (*LoginCredential, bool) {
	if o == nil || IsNil(o.ServiceLoginCredential) {
		return nil, false
	}
	return o.ServiceLoginCredential, true
}

// HasServiceLoginCredential returns a boolean if a field has been set.
func (o *MsgVpn) HasServiceLoginCredential() bool {
	if o != nil && !IsNil(o.ServiceLoginCredential) {
		return true
	}

	return false
}

// SetServiceLoginCredential gets a reference to the given LoginCredential and assigns it to the ServiceLoginCredential field.
func (o *MsgVpn) SetServiceLoginCredential(v LoginCredential) {
	o.ServiceLoginCredential = &v
}

// GetMaxConnectionCount returns the MaxConnectionCount field value if set, zero value otherwise.
func (o *MsgVpn) GetMaxConnectionCount() int32 {
	if o == nil || IsNil(o.MaxConnectionCount) {
		var ret int32
		return ret
	}
	return *o.MaxConnectionCount
}

// GetMaxConnectionCountOk returns a tuple with the MaxConnectionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetMaxConnectionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxConnectionCount) {
		return nil, false
	}
	return o.MaxConnectionCount, true
}

// HasMaxConnectionCount returns a boolean if a field has been set.
func (o *MsgVpn) HasMaxConnectionCount() bool {
	if o != nil && !IsNil(o.MaxConnectionCount) {
		return true
	}

	return false
}

// SetMaxConnectionCount gets a reference to the given int32 and assigns it to the MaxConnectionCount field.
func (o *MsgVpn) SetMaxConnectionCount(v int32) {
	o.MaxConnectionCount = &v
}

// GetMaxEgressFlowCount returns the MaxEgressFlowCount field value if set, zero value otherwise.
func (o *MsgVpn) GetMaxEgressFlowCount() int32 {
	if o == nil || IsNil(o.MaxEgressFlowCount) {
		var ret int32
		return ret
	}
	return *o.MaxEgressFlowCount
}

// GetMaxEgressFlowCountOk returns a tuple with the MaxEgressFlowCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetMaxEgressFlowCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxEgressFlowCount) {
		return nil, false
	}
	return o.MaxEgressFlowCount, true
}

// HasMaxEgressFlowCount returns a boolean if a field has been set.
func (o *MsgVpn) HasMaxEgressFlowCount() bool {
	if o != nil && !IsNil(o.MaxEgressFlowCount) {
		return true
	}

	return false
}

// SetMaxEgressFlowCount gets a reference to the given int32 and assigns it to the MaxEgressFlowCount field.
func (o *MsgVpn) SetMaxEgressFlowCount(v int32) {
	o.MaxEgressFlowCount = &v
}

// GetMaxEndpointCount returns the MaxEndpointCount field value if set, zero value otherwise.
func (o *MsgVpn) GetMaxEndpointCount() int32 {
	if o == nil || IsNil(o.MaxEndpointCount) {
		var ret int32
		return ret
	}
	return *o.MaxEndpointCount
}

// GetMaxEndpointCountOk returns a tuple with the MaxEndpointCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetMaxEndpointCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxEndpointCount) {
		return nil, false
	}
	return o.MaxEndpointCount, true
}

// HasMaxEndpointCount returns a boolean if a field has been set.
func (o *MsgVpn) HasMaxEndpointCount() bool {
	if o != nil && !IsNil(o.MaxEndpointCount) {
		return true
	}

	return false
}

// SetMaxEndpointCount gets a reference to the given int32 and assigns it to the MaxEndpointCount field.
func (o *MsgVpn) SetMaxEndpointCount(v int32) {
	o.MaxEndpointCount = &v
}

// GetMaxIngressFlowCount returns the MaxIngressFlowCount field value if set, zero value otherwise.
func (o *MsgVpn) GetMaxIngressFlowCount() int32 {
	if o == nil || IsNil(o.MaxIngressFlowCount) {
		var ret int32
		return ret
	}
	return *o.MaxIngressFlowCount
}

// GetMaxIngressFlowCountOk returns a tuple with the MaxIngressFlowCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetMaxIngressFlowCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxIngressFlowCount) {
		return nil, false
	}
	return o.MaxIngressFlowCount, true
}

// HasMaxIngressFlowCount returns a boolean if a field has been set.
func (o *MsgVpn) HasMaxIngressFlowCount() bool {
	if o != nil && !IsNil(o.MaxIngressFlowCount) {
		return true
	}

	return false
}

// SetMaxIngressFlowCount gets a reference to the given int32 and assigns it to the MaxIngressFlowCount field.
func (o *MsgVpn) SetMaxIngressFlowCount(v int32) {
	o.MaxIngressFlowCount = &v
}

// GetMaxMsgSpoolUsage returns the MaxMsgSpoolUsage field value if set, zero value otherwise.
func (o *MsgVpn) GetMaxMsgSpoolUsage() int32 {
	if o == nil || IsNil(o.MaxMsgSpoolUsage) {
		var ret int32
		return ret
	}
	return *o.MaxMsgSpoolUsage
}

// GetMaxMsgSpoolUsageOk returns a tuple with the MaxMsgSpoolUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetMaxMsgSpoolUsageOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxMsgSpoolUsage) {
		return nil, false
	}
	return o.MaxMsgSpoolUsage, true
}

// HasMaxMsgSpoolUsage returns a boolean if a field has been set.
func (o *MsgVpn) HasMaxMsgSpoolUsage() bool {
	if o != nil && !IsNil(o.MaxMsgSpoolUsage) {
		return true
	}

	return false
}

// SetMaxMsgSpoolUsage gets a reference to the given int32 and assigns it to the MaxMsgSpoolUsage field.
func (o *MsgVpn) SetMaxMsgSpoolUsage(v int32) {
	o.MaxMsgSpoolUsage = &v
}

// GetMaxSubscriptionCount returns the MaxSubscriptionCount field value if set, zero value otherwise.
func (o *MsgVpn) GetMaxSubscriptionCount() int32 {
	if o == nil || IsNil(o.MaxSubscriptionCount) {
		var ret int32
		return ret
	}
	return *o.MaxSubscriptionCount
}

// GetMaxSubscriptionCountOk returns a tuple with the MaxSubscriptionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetMaxSubscriptionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSubscriptionCount) {
		return nil, false
	}
	return o.MaxSubscriptionCount, true
}

// HasMaxSubscriptionCount returns a boolean if a field has been set.
func (o *MsgVpn) HasMaxSubscriptionCount() bool {
	if o != nil && !IsNil(o.MaxSubscriptionCount) {
		return true
	}

	return false
}

// SetMaxSubscriptionCount gets a reference to the given int32 and assigns it to the MaxSubscriptionCount field.
func (o *MsgVpn) SetMaxSubscriptionCount(v int32) {
	o.MaxSubscriptionCount = &v
}

// GetMaxTransactedSessionCount returns the MaxTransactedSessionCount field value if set, zero value otherwise.
func (o *MsgVpn) GetMaxTransactedSessionCount() int32 {
	if o == nil || IsNil(o.MaxTransactedSessionCount) {
		var ret int32
		return ret
	}
	return *o.MaxTransactedSessionCount
}

// GetMaxTransactedSessionCountOk returns a tuple with the MaxTransactedSessionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetMaxTransactedSessionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTransactedSessionCount) {
		return nil, false
	}
	return o.MaxTransactedSessionCount, true
}

// HasMaxTransactedSessionCount returns a boolean if a field has been set.
func (o *MsgVpn) HasMaxTransactedSessionCount() bool {
	if o != nil && !IsNil(o.MaxTransactedSessionCount) {
		return true
	}

	return false
}

// SetMaxTransactedSessionCount gets a reference to the given int32 and assigns it to the MaxTransactedSessionCount field.
func (o *MsgVpn) SetMaxTransactedSessionCount(v int32) {
	o.MaxTransactedSessionCount = &v
}

// GetMaxTransactionCount returns the MaxTransactionCount field value if set, zero value otherwise.
func (o *MsgVpn) GetMaxTransactionCount() int32 {
	if o == nil || IsNil(o.MaxTransactionCount) {
		var ret int32
		return ret
	}
	return *o.MaxTransactionCount
}

// GetMaxTransactionCountOk returns a tuple with the MaxTransactionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetMaxTransactionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTransactionCount) {
		return nil, false
	}
	return o.MaxTransactionCount, true
}

// HasMaxTransactionCount returns a boolean if a field has been set.
func (o *MsgVpn) HasMaxTransactionCount() bool {
	if o != nil && !IsNil(o.MaxTransactionCount) {
		return true
	}

	return false
}

// SetMaxTransactionCount gets a reference to the given int32 and assigns it to the MaxTransactionCount field.
func (o *MsgVpn) SetMaxTransactionCount(v int32) {
	o.MaxTransactionCount = &v
}

// GetSempOverMessageBus returns the SempOverMessageBus field value if set, zero value otherwise.
func (o *MsgVpn) GetSempOverMessageBus() SEMPOverMsgBus {
	if o == nil || IsNil(o.SempOverMessageBus) {
		var ret SEMPOverMsgBus
		return ret
	}
	return *o.SempOverMessageBus
}

// GetSempOverMessageBusOk returns a tuple with the SempOverMessageBus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetSempOverMessageBusOk() (*SEMPOverMsgBus, bool) {
	if o == nil || IsNil(o.SempOverMessageBus) {
		return nil, false
	}
	return o.SempOverMessageBus, true
}

// HasSempOverMessageBus returns a boolean if a field has been set.
func (o *MsgVpn) HasSempOverMessageBus() bool {
	if o != nil && !IsNil(o.SempOverMessageBus) {
		return true
	}

	return false
}

// SetSempOverMessageBus gets a reference to the given SEMPOverMsgBus and assigns it to the SempOverMessageBus field.
func (o *MsgVpn) SetSempOverMessageBus(v SEMPOverMsgBus) {
	o.SempOverMessageBus = &v
}

// GetSubDomainName returns the SubDomainName field value if set, zero value otherwise.
func (o *MsgVpn) GetSubDomainName() string {
	if o == nil || IsNil(o.SubDomainName) {
		var ret string
		return ret
	}
	return *o.SubDomainName
}

// GetSubDomainNameOk returns a tuple with the SubDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetSubDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubDomainName) {
		return nil, false
	}
	return o.SubDomainName, true
}

// HasSubDomainName returns a boolean if a field has been set.
func (o *MsgVpn) HasSubDomainName() bool {
	if o != nil && !IsNil(o.SubDomainName) {
		return true
	}

	return false
}

// SetSubDomainName gets a reference to the given string and assigns it to the SubDomainName field.
func (o *MsgVpn) SetSubDomainName(v string) {
	o.SubDomainName = &v
}

// GetTruststoreUri returns the TruststoreUri field value if set, zero value otherwise.
func (o *MsgVpn) GetTruststoreUri() string {
	if o == nil || IsNil(o.TruststoreUri) {
		var ret string
		return ret
	}
	return *o.TruststoreUri
}

// GetTruststoreUriOk returns a tuple with the TruststoreUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsgVpn) GetTruststoreUriOk() (*string, bool) {
	if o == nil || IsNil(o.TruststoreUri) {
		return nil, false
	}
	return o.TruststoreUri, true
}

// HasTruststoreUri returns a boolean if a field has been set.
func (o *MsgVpn) HasTruststoreUri() bool {
	if o != nil && !IsNil(o.TruststoreUri) {
		return true
	}

	return false
}

// SetTruststoreUri gets a reference to the given string and assigns it to the TruststoreUri field.
func (o *MsgVpn) SetTruststoreUri(v string) {
	o.TruststoreUri = &v
}

func (o MsgVpn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MsgVpn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MsgVpnName) {
		toSerialize["msgVpnName"] = o.MsgVpnName
	}
	if !IsNil(o.AuthenticationBasicEnabled) {
		toSerialize["authenticationBasicEnabled"] = o.AuthenticationBasicEnabled
	}
	if !IsNil(o.AuthenticationBasicType) {
		toSerialize["authenticationBasicType"] = o.AuthenticationBasicType
	}
	if !IsNil(o.AuthenticationClientCertEnabled) {
		toSerialize["authenticationClientCertEnabled"] = o.AuthenticationClientCertEnabled
	}
	if !IsNil(o.AuthenticationClientCertValidateDateEnabled) {
		toSerialize["authenticationClientCertValidateDateEnabled"] = o.AuthenticationClientCertValidateDateEnabled
	}
	if !IsNil(o.AuthenticationOauthEnabled) {
		toSerialize["authenticationOauthEnabled"] = o.AuthenticationOauthEnabled
	}
	if !IsNil(o.ClientProfiles) {
		toSerialize["clientProfiles"] = o.ClientProfiles
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.EventLargeMsgThreshold) {
		toSerialize["eventLargeMsgThreshold"] = o.EventLargeMsgThreshold
	}
	if !IsNil(o.ManagementAdminLoginCredential) {
		toSerialize["managementAdminLoginCredential"] = o.ManagementAdminLoginCredential
	}
	if !IsNil(o.ServiceLoginCredential) {
		toSerialize["serviceLoginCredential"] = o.ServiceLoginCredential
	}
	if !IsNil(o.MaxConnectionCount) {
		toSerialize["maxConnectionCount"] = o.MaxConnectionCount
	}
	if !IsNil(o.MaxEgressFlowCount) {
		toSerialize["maxEgressFlowCount"] = o.MaxEgressFlowCount
	}
	if !IsNil(o.MaxEndpointCount) {
		toSerialize["maxEndpointCount"] = o.MaxEndpointCount
	}
	if !IsNil(o.MaxIngressFlowCount) {
		toSerialize["maxIngressFlowCount"] = o.MaxIngressFlowCount
	}
	if !IsNil(o.MaxMsgSpoolUsage) {
		toSerialize["maxMsgSpoolUsage"] = o.MaxMsgSpoolUsage
	}
	if !IsNil(o.MaxSubscriptionCount) {
		toSerialize["maxSubscriptionCount"] = o.MaxSubscriptionCount
	}
	if !IsNil(o.MaxTransactedSessionCount) {
		toSerialize["maxTransactedSessionCount"] = o.MaxTransactedSessionCount
	}
	if !IsNil(o.MaxTransactionCount) {
		toSerialize["maxTransactionCount"] = o.MaxTransactionCount
	}
	if !IsNil(o.SempOverMessageBus) {
		toSerialize["sempOverMessageBus"] = o.SempOverMessageBus
	}
	if !IsNil(o.SubDomainName) {
		toSerialize["subDomainName"] = o.SubDomainName
	}
	if !IsNil(o.TruststoreUri) {
		toSerialize["truststoreUri"] = o.TruststoreUri
	}
	return toSerialize, nil
}

type NullableMsgVpn struct {
	value *MsgVpn
	isSet bool
}

func (v NullableMsgVpn) Get() *MsgVpn {
	return v.value
}

func (v *NullableMsgVpn) Set(val *MsgVpn) {
	v.value = val
	v.isSet = true
}

func (v NullableMsgVpn) IsSet() bool {
	return v.isSet
}

func (v *NullableMsgVpn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMsgVpn(val *MsgVpn) *NullableMsgVpn {
	return &NullableMsgVpn{value: val, isSet: true}
}

func (v NullableMsgVpn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMsgVpn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


