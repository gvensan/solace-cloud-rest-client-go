/*
MISSION CONTROL

Documentation for Mission Control API

API version: V2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateServiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateServiceRequest{}

// CreateServiceRequest struct for CreateServiceRequest
type CreateServiceRequest struct {
	// The event broker service name.
	Name string `json:"name"`
	// The event broker version. A default version is provided when this is not specified.
	EventBrokerVersion *string `json:"eventBrokerVersion,omitempty"`
	// The message VPN name. A default message VPN name is provided when this is not specified.
	MsgVpnName *string `json:"msgVpnName,omitempty"`
	// The message spool size, in gigabytes (GB). A default message spool size is provided if this is not specified.
	MaxSpoolUsage *int32 `json:"maxSpoolUsage,omitempty"`
	// The identifier of the service class.
	ServiceClassId string `json:"serviceClassId"`
	// The identifier of the datacenter.
	DatacenterId string `json:"datacenterId"`
	// The name of the DMR cluster.
	ClusterName *string `json:"clusterName,omitempty"`
	// Lock service after creation. A locked service cannot be deleted.
	Locked *bool `json:"locked,omitempty"`
	// Whether redundancy group SSL is enabled. This is mate-link encryption.
	RedundancyGroupSslEnabled *bool `json:"redundancyGroupSslEnabled,omitempty"`
	// The collection of service connection endpoints.
	ServiceConnectionEndpoints []ConnectionEndpoint `json:"serviceConnectionEndpoints,omitempty"`
}

// NewCreateServiceRequest instantiates a new CreateServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServiceRequest(name string, serviceClassId string, datacenterId string) *CreateServiceRequest {
	this := CreateServiceRequest{}
	this.Name = name
	this.ServiceClassId = serviceClassId
	this.DatacenterId = datacenterId
	var locked bool = false
	this.Locked = &locked
	var redundancyGroupSslEnabled bool = false
	this.RedundancyGroupSslEnabled = &redundancyGroupSslEnabled
	return &this
}

// NewCreateServiceRequestWithDefaults instantiates a new CreateServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServiceRequestWithDefaults() *CreateServiceRequest {
	this := CreateServiceRequest{}
	var locked bool = false
	this.Locked = &locked
	var redundancyGroupSslEnabled bool = false
	this.RedundancyGroupSslEnabled = &redundancyGroupSslEnabled
	return &this
}

// GetName returns the Name field value
func (o *CreateServiceRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateServiceRequest) SetName(v string) {
	o.Name = v
}

// GetEventBrokerVersion returns the EventBrokerVersion field value if set, zero value otherwise.
func (o *CreateServiceRequest) GetEventBrokerVersion() string {
	if o == nil || IsNil(o.EventBrokerVersion) {
		var ret string
		return ret
	}
	return *o.EventBrokerVersion
}

// GetEventBrokerVersionOk returns a tuple with the EventBrokerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetEventBrokerVersionOk() (*string, bool) {
	if o == nil || IsNil(o.EventBrokerVersion) {
		return nil, false
	}
	return o.EventBrokerVersion, true
}

// HasEventBrokerVersion returns a boolean if a field has been set.
func (o *CreateServiceRequest) HasEventBrokerVersion() bool {
	if o != nil && !IsNil(o.EventBrokerVersion) {
		return true
	}

	return false
}

// SetEventBrokerVersion gets a reference to the given string and assigns it to the EventBrokerVersion field.
func (o *CreateServiceRequest) SetEventBrokerVersion(v string) {
	o.EventBrokerVersion = &v
}

// GetMsgVpnName returns the MsgVpnName field value if set, zero value otherwise.
func (o *CreateServiceRequest) GetMsgVpnName() string {
	if o == nil || IsNil(o.MsgVpnName) {
		var ret string
		return ret
	}
	return *o.MsgVpnName
}

// GetMsgVpnNameOk returns a tuple with the MsgVpnName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetMsgVpnNameOk() (*string, bool) {
	if o == nil || IsNil(o.MsgVpnName) {
		return nil, false
	}
	return o.MsgVpnName, true
}

// HasMsgVpnName returns a boolean if a field has been set.
func (o *CreateServiceRequest) HasMsgVpnName() bool {
	if o != nil && !IsNil(o.MsgVpnName) {
		return true
	}

	return false
}

// SetMsgVpnName gets a reference to the given string and assigns it to the MsgVpnName field.
func (o *CreateServiceRequest) SetMsgVpnName(v string) {
	o.MsgVpnName = &v
}

// GetMaxSpoolUsage returns the MaxSpoolUsage field value if set, zero value otherwise.
func (o *CreateServiceRequest) GetMaxSpoolUsage() int32 {
	if o == nil || IsNil(o.MaxSpoolUsage) {
		var ret int32
		return ret
	}
	return *o.MaxSpoolUsage
}

// GetMaxSpoolUsageOk returns a tuple with the MaxSpoolUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetMaxSpoolUsageOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSpoolUsage) {
		return nil, false
	}
	return o.MaxSpoolUsage, true
}

// HasMaxSpoolUsage returns a boolean if a field has been set.
func (o *CreateServiceRequest) HasMaxSpoolUsage() bool {
	if o != nil && !IsNil(o.MaxSpoolUsage) {
		return true
	}

	return false
}

// SetMaxSpoolUsage gets a reference to the given int32 and assigns it to the MaxSpoolUsage field.
func (o *CreateServiceRequest) SetMaxSpoolUsage(v int32) {
	o.MaxSpoolUsage = &v
}

// GetServiceClassId returns the ServiceClassId field value
func (o *CreateServiceRequest) GetServiceClassId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceClassId
}

// GetServiceClassIdOk returns a tuple with the ServiceClassId field value
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetServiceClassIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceClassId, true
}

// SetServiceClassId sets field value
func (o *CreateServiceRequest) SetServiceClassId(v string) {
	o.ServiceClassId = v
}

// GetDatacenterId returns the DatacenterId field value
func (o *CreateServiceRequest) GetDatacenterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatacenterId
}

// GetDatacenterIdOk returns a tuple with the DatacenterId field value
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetDatacenterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatacenterId, true
}

// SetDatacenterId sets field value
func (o *CreateServiceRequest) SetDatacenterId(v string) {
	o.DatacenterId = v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *CreateServiceRequest) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *CreateServiceRequest) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *CreateServiceRequest) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *CreateServiceRequest) GetLocked() bool {
	if o == nil || IsNil(o.Locked) {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *CreateServiceRequest) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *CreateServiceRequest) SetLocked(v bool) {
	o.Locked = &v
}

// GetRedundancyGroupSslEnabled returns the RedundancyGroupSslEnabled field value if set, zero value otherwise.
func (o *CreateServiceRequest) GetRedundancyGroupSslEnabled() bool {
	if o == nil || IsNil(o.RedundancyGroupSslEnabled) {
		var ret bool
		return ret
	}
	return *o.RedundancyGroupSslEnabled
}

// GetRedundancyGroupSslEnabledOk returns a tuple with the RedundancyGroupSslEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetRedundancyGroupSslEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RedundancyGroupSslEnabled) {
		return nil, false
	}
	return o.RedundancyGroupSslEnabled, true
}

// HasRedundancyGroupSslEnabled returns a boolean if a field has been set.
func (o *CreateServiceRequest) HasRedundancyGroupSslEnabled() bool {
	if o != nil && !IsNil(o.RedundancyGroupSslEnabled) {
		return true
	}

	return false
}

// SetRedundancyGroupSslEnabled gets a reference to the given bool and assigns it to the RedundancyGroupSslEnabled field.
func (o *CreateServiceRequest) SetRedundancyGroupSslEnabled(v bool) {
	o.RedundancyGroupSslEnabled = &v
}

// GetServiceConnectionEndpoints returns the ServiceConnectionEndpoints field value if set, zero value otherwise.
func (o *CreateServiceRequest) GetServiceConnectionEndpoints() []ConnectionEndpoint {
	if o == nil || IsNil(o.ServiceConnectionEndpoints) {
		var ret []ConnectionEndpoint
		return ret
	}
	return o.ServiceConnectionEndpoints
}

// GetServiceConnectionEndpointsOk returns a tuple with the ServiceConnectionEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetServiceConnectionEndpointsOk() ([]ConnectionEndpoint, bool) {
	if o == nil || IsNil(o.ServiceConnectionEndpoints) {
		return nil, false
	}
	return o.ServiceConnectionEndpoints, true
}

// HasServiceConnectionEndpoints returns a boolean if a field has been set.
func (o *CreateServiceRequest) HasServiceConnectionEndpoints() bool {
	if o != nil && !IsNil(o.ServiceConnectionEndpoints) {
		return true
	}

	return false
}

// SetServiceConnectionEndpoints gets a reference to the given []ConnectionEndpoint and assigns it to the ServiceConnectionEndpoints field.
func (o *CreateServiceRequest) SetServiceConnectionEndpoints(v []ConnectionEndpoint) {
	o.ServiceConnectionEndpoints = v
}

func (o CreateServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateServiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.EventBrokerVersion) {
		toSerialize["eventBrokerVersion"] = o.EventBrokerVersion
	}
	if !IsNil(o.MsgVpnName) {
		toSerialize["msgVpnName"] = o.MsgVpnName
	}
	if !IsNil(o.MaxSpoolUsage) {
		toSerialize["maxSpoolUsage"] = o.MaxSpoolUsage
	}
	toSerialize["serviceClassId"] = o.ServiceClassId
	toSerialize["datacenterId"] = o.DatacenterId
	if !IsNil(o.ClusterName) {
		toSerialize["clusterName"] = o.ClusterName
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.RedundancyGroupSslEnabled) {
		toSerialize["redundancyGroupSslEnabled"] = o.RedundancyGroupSslEnabled
	}
	if !IsNil(o.ServiceConnectionEndpoints) {
		toSerialize["serviceConnectionEndpoints"] = o.ServiceConnectionEndpoints
	}
	return toSerialize, nil
}

type NullableCreateServiceRequest struct {
	value *CreateServiceRequest
	isSet bool
}

func (v NullableCreateServiceRequest) Get() *CreateServiceRequest {
	return v.value
}

func (v *NullableCreateServiceRequest) Set(val *CreateServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServiceRequest(val *CreateServiceRequest) *NullableCreateServiceRequest {
	return &NullableCreateServiceRequest{value: val, isSet: true}
}

func (v NullableCreateServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


