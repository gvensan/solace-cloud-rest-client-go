/*
MISSION CONTROL

Documentation for Mission Control API

API version: V2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SEMPOverMsgBus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SEMPOverMsgBus{}

// SEMPOverMsgBus Whether SEMP-Over-Message-Bus attributes is enabled.
type SEMPOverMsgBus struct {
	// Whether SEMP over Message Bus is enabled.  When enabled for a Message VPN, clients have access to a limited subset of the event broker management commands.
	SempOverMsgBusEnabled *bool `json:"sempOverMsgBusEnabled,omitempty"`
	// Whether access to show SEMP commands is enabled.
	SempAccessToShowCmdsEnabled *bool `json:"sempAccessToShowCmdsEnabled,omitempty"`
	// Whether access to SEMP commands with the admin user access-level is enabled.
	SempAccessToAdminCmdsEnabled *bool `json:"sempAccessToAdminCmdsEnabled,omitempty"`
	// Whether access to SEMP Client-Admin commands is enabled.
	SempAccessToClientAdminCmdsEnabled *bool `json:"sempAccessToClientAdminCmdsEnabled,omitempty"`
	// SEMP Access to Cache Commands Enabled
	SempAccessToCacheCmdsEnabled *bool `json:"sempAccessToCacheCmdsEnabled,omitempty"`
}

// NewSEMPOverMsgBus instantiates a new SEMPOverMsgBus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSEMPOverMsgBus() *SEMPOverMsgBus {
	this := SEMPOverMsgBus{}
	return &this
}

// NewSEMPOverMsgBusWithDefaults instantiates a new SEMPOverMsgBus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSEMPOverMsgBusWithDefaults() *SEMPOverMsgBus {
	this := SEMPOverMsgBus{}
	return &this
}

// GetSempOverMsgBusEnabled returns the SempOverMsgBusEnabled field value if set, zero value otherwise.
func (o *SEMPOverMsgBus) GetSempOverMsgBusEnabled() bool {
	if o == nil || IsNil(o.SempOverMsgBusEnabled) {
		var ret bool
		return ret
	}
	return *o.SempOverMsgBusEnabled
}

// GetSempOverMsgBusEnabledOk returns a tuple with the SempOverMsgBusEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEMPOverMsgBus) GetSempOverMsgBusEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SempOverMsgBusEnabled) {
		return nil, false
	}
	return o.SempOverMsgBusEnabled, true
}

// HasSempOverMsgBusEnabled returns a boolean if a field has been set.
func (o *SEMPOverMsgBus) HasSempOverMsgBusEnabled() bool {
	if o != nil && !IsNil(o.SempOverMsgBusEnabled) {
		return true
	}

	return false
}

// SetSempOverMsgBusEnabled gets a reference to the given bool and assigns it to the SempOverMsgBusEnabled field.
func (o *SEMPOverMsgBus) SetSempOverMsgBusEnabled(v bool) {
	o.SempOverMsgBusEnabled = &v
}

// GetSempAccessToShowCmdsEnabled returns the SempAccessToShowCmdsEnabled field value if set, zero value otherwise.
func (o *SEMPOverMsgBus) GetSempAccessToShowCmdsEnabled() bool {
	if o == nil || IsNil(o.SempAccessToShowCmdsEnabled) {
		var ret bool
		return ret
	}
	return *o.SempAccessToShowCmdsEnabled
}

// GetSempAccessToShowCmdsEnabledOk returns a tuple with the SempAccessToShowCmdsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEMPOverMsgBus) GetSempAccessToShowCmdsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SempAccessToShowCmdsEnabled) {
		return nil, false
	}
	return o.SempAccessToShowCmdsEnabled, true
}

// HasSempAccessToShowCmdsEnabled returns a boolean if a field has been set.
func (o *SEMPOverMsgBus) HasSempAccessToShowCmdsEnabled() bool {
	if o != nil && !IsNil(o.SempAccessToShowCmdsEnabled) {
		return true
	}

	return false
}

// SetSempAccessToShowCmdsEnabled gets a reference to the given bool and assigns it to the SempAccessToShowCmdsEnabled field.
func (o *SEMPOverMsgBus) SetSempAccessToShowCmdsEnabled(v bool) {
	o.SempAccessToShowCmdsEnabled = &v
}

// GetSempAccessToAdminCmdsEnabled returns the SempAccessToAdminCmdsEnabled field value if set, zero value otherwise.
func (o *SEMPOverMsgBus) GetSempAccessToAdminCmdsEnabled() bool {
	if o == nil || IsNil(o.SempAccessToAdminCmdsEnabled) {
		var ret bool
		return ret
	}
	return *o.SempAccessToAdminCmdsEnabled
}

// GetSempAccessToAdminCmdsEnabledOk returns a tuple with the SempAccessToAdminCmdsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEMPOverMsgBus) GetSempAccessToAdminCmdsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SempAccessToAdminCmdsEnabled) {
		return nil, false
	}
	return o.SempAccessToAdminCmdsEnabled, true
}

// HasSempAccessToAdminCmdsEnabled returns a boolean if a field has been set.
func (o *SEMPOverMsgBus) HasSempAccessToAdminCmdsEnabled() bool {
	if o != nil && !IsNil(o.SempAccessToAdminCmdsEnabled) {
		return true
	}

	return false
}

// SetSempAccessToAdminCmdsEnabled gets a reference to the given bool and assigns it to the SempAccessToAdminCmdsEnabled field.
func (o *SEMPOverMsgBus) SetSempAccessToAdminCmdsEnabled(v bool) {
	o.SempAccessToAdminCmdsEnabled = &v
}

// GetSempAccessToClientAdminCmdsEnabled returns the SempAccessToClientAdminCmdsEnabled field value if set, zero value otherwise.
func (o *SEMPOverMsgBus) GetSempAccessToClientAdminCmdsEnabled() bool {
	if o == nil || IsNil(o.SempAccessToClientAdminCmdsEnabled) {
		var ret bool
		return ret
	}
	return *o.SempAccessToClientAdminCmdsEnabled
}

// GetSempAccessToClientAdminCmdsEnabledOk returns a tuple with the SempAccessToClientAdminCmdsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEMPOverMsgBus) GetSempAccessToClientAdminCmdsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SempAccessToClientAdminCmdsEnabled) {
		return nil, false
	}
	return o.SempAccessToClientAdminCmdsEnabled, true
}

// HasSempAccessToClientAdminCmdsEnabled returns a boolean if a field has been set.
func (o *SEMPOverMsgBus) HasSempAccessToClientAdminCmdsEnabled() bool {
	if o != nil && !IsNil(o.SempAccessToClientAdminCmdsEnabled) {
		return true
	}

	return false
}

// SetSempAccessToClientAdminCmdsEnabled gets a reference to the given bool and assigns it to the SempAccessToClientAdminCmdsEnabled field.
func (o *SEMPOverMsgBus) SetSempAccessToClientAdminCmdsEnabled(v bool) {
	o.SempAccessToClientAdminCmdsEnabled = &v
}

// GetSempAccessToCacheCmdsEnabled returns the SempAccessToCacheCmdsEnabled field value if set, zero value otherwise.
func (o *SEMPOverMsgBus) GetSempAccessToCacheCmdsEnabled() bool {
	if o == nil || IsNil(o.SempAccessToCacheCmdsEnabled) {
		var ret bool
		return ret
	}
	return *o.SempAccessToCacheCmdsEnabled
}

// GetSempAccessToCacheCmdsEnabledOk returns a tuple with the SempAccessToCacheCmdsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEMPOverMsgBus) GetSempAccessToCacheCmdsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SempAccessToCacheCmdsEnabled) {
		return nil, false
	}
	return o.SempAccessToCacheCmdsEnabled, true
}

// HasSempAccessToCacheCmdsEnabled returns a boolean if a field has been set.
func (o *SEMPOverMsgBus) HasSempAccessToCacheCmdsEnabled() bool {
	if o != nil && !IsNil(o.SempAccessToCacheCmdsEnabled) {
		return true
	}

	return false
}

// SetSempAccessToCacheCmdsEnabled gets a reference to the given bool and assigns it to the SempAccessToCacheCmdsEnabled field.
func (o *SEMPOverMsgBus) SetSempAccessToCacheCmdsEnabled(v bool) {
	o.SempAccessToCacheCmdsEnabled = &v
}

func (o SEMPOverMsgBus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SEMPOverMsgBus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SempOverMsgBusEnabled) {
		toSerialize["sempOverMsgBusEnabled"] = o.SempOverMsgBusEnabled
	}
	if !IsNil(o.SempAccessToShowCmdsEnabled) {
		toSerialize["sempAccessToShowCmdsEnabled"] = o.SempAccessToShowCmdsEnabled
	}
	if !IsNil(o.SempAccessToAdminCmdsEnabled) {
		toSerialize["sempAccessToAdminCmdsEnabled"] = o.SempAccessToAdminCmdsEnabled
	}
	if !IsNil(o.SempAccessToClientAdminCmdsEnabled) {
		toSerialize["sempAccessToClientAdminCmdsEnabled"] = o.SempAccessToClientAdminCmdsEnabled
	}
	if !IsNil(o.SempAccessToCacheCmdsEnabled) {
		toSerialize["sempAccessToCacheCmdsEnabled"] = o.SempAccessToCacheCmdsEnabled
	}
	return toSerialize, nil
}

type NullableSEMPOverMsgBus struct {
	value *SEMPOverMsgBus
	isSet bool
}

func (v NullableSEMPOverMsgBus) Get() *SEMPOverMsgBus {
	return v.value
}

func (v *NullableSEMPOverMsgBus) Set(val *SEMPOverMsgBus) {
	v.value = val
	v.isSet = true
}

func (v NullableSEMPOverMsgBus) IsSet() bool {
	return v.isSet
}

func (v *NullableSEMPOverMsgBus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSEMPOverMsgBus(val *SEMPOverMsgBus) *NullableSEMPOverMsgBus {
	return &NullableSEMPOverMsgBus{value: val, isSet: true}
}

func (v NullableSEMPOverMsgBus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSEMPOverMsgBus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


